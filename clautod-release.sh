#!/bin/bash
# Script for releasing clautod
# Given a version number, this script creates a debian package
# from the clautod source and tags the current git commit with
# the same version number. This script is here because without
# it, the version would need to be manually updated in three
# places:
# - setup.py (PIP's configuration)
# - debian/control (DPKG's configuration)
# - the git tag

# Check parameters
if [ ! $1 ] ; then
    echo "Specify version string in X.X.X format"
    exit 1
fi
if [[ ! $1 =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]] ; then
    echo "Version string <"$1"> is invalid"
    exit 1
fi

# Populate clautod-version.txt for setup.py to read
echo " # Do not edit this file! It's generated and used by a script
 # to pass version numbers to setup.py" > clautod-version.txt
echo $1 >> clautod-version.txt

echo "Packaging clautod v"$1

# Populate README files in debian directory
cp README.md debian/README.debian
cp README.md debian/README.source

# Populate changelog based on git log
echo "clautod ("$1") unstable; urgency=medium"                          > debian/changelog
echo ""                                                                >> debian/changelog
git log --oneline $(git tag | tail -n 1)..@ | sed 's/^/  * /'          >> debian/changelog
echo ""                                                                >> debian/changelog
echo " -- Jeremy Lerner <jeremy.cpsc.questions@gmail.com>  "$(date -R) >> debian/changelog

# Let the user edit the changelist
nano debian/changelog

# Build the Debian package
dh_make -p=clautod_$1 --indep --email="jeremy.cpsc.questions@gmail.com" --copyright="mit" --createorig

echo "Tagging current commit as v"$1

# Tag the current commit in git
if git tag -a v$1 && git push --tags ; then
    echo "Successfully tagged commit"
else
    echo "Failed to tag commit. This is not a legitimate release!"
fi

rm clautod-version.txt
echo "Cleaned up"
